"""
Auto Generated Model test
Automatically generated with ❤️ by django-sage-painless
"""
from django.apps import apps
from rest_framework.test import APITestCase
from django_seed import Seed

{% for model in models %}
from {{app_name}}.models.{{model.name.lower()}} import {{model.name}}
{% endfor %}

seeder = Seed.seeder()

class {{app_name.capitalize()}}ModelTest(APITestCase):
    """
    {{app_name}} Model Test
    Auto Generated
    """
    def setUp(self) -> None:
        self.models = apps.get_app_config('{{app_name}}').get_models()
        self.models_name = [model._meta.object_name for model in self.models]
    {% for model in models %}
    {% if not model.has_one_to_one() %}
    def test_{{model.name.lower()}}_model(self):
        """
        test {{model.name}} creation
        """
        seeder.add_entity({{model.name}}, 1)
        seeder.execute() # create instance
        # assertions
        self.assertTrue({{model.name}}.objects.exists())
        self.assertIn('{{model.name}}', self.models_name)
    {% endif %}
    {% endfor %}
    {% for signal in signals %}
    def test_{{signal.model_a.lower()}}_model_signal(self):
        """
        test {{signal.model_b}} - {{signal.model_a}} signal
        """
        seeder.add_entity({{signal.model_b}}, 1)
        seeder.execute() # create instance
        # assertions
        self.assertTrue({{signal.model_b}}.objects.exists())
        self.assertTrue({{signal.model_a}}.objects.exists())
        first_object = {{signal.model_b}}.objects.first()
        second_object = {{signal.model_a}}.objects.first()
        self.assertEqual(second_object.{{signal.field}}, first_object)
    {%endfor%}
